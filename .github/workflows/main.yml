# name: Lint Python

# on:
#   # Trigger the workflow on push or pull request,
#   # but only for the main branch
#   push:
#     # branches:
#     #   - main
#     #   - Tan
#     paths:
#       - '**.py'

#   pull_request:
#     branches:
#       - main

# jobs:
#   run-linters:
#     name: Run linters
#     runs-on: ubuntu-latest

#     steps:
#       - name: Check out Git repository
#         uses: actions/checkout@v2

#       - name: Set up Python
#         uses: actions/setup-python@v1
#         with:
#           python-version: 3.8

#       - name: Install Python dependencies
#         run: pip install black flake8

#       - name: Run linters
#         uses: wearerequired/lint-action@v1
#         with:
#           black: true
#           flake8: true
##################################
---
###########################
###########################
## Linter GitHub Actions ##
###########################
###########################
name: Lint Code Base

#
# Documentation:
# https://help.github.com/en/articles/workflow-syntax-for-github-actions
#

#############################
# Start the job on all push #
#############################
on:
  push:
    branches:
      - Tan

  pull_request:
    branches: [master]

###############
# Set the Job #
###############
jobs:
  build:
    # Name the Job
    name: Lint Code Base
    # Set the agent to run on
    runs-on: ubuntu-latest

    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      ################################
      # Run Linter against code base #
      ################################
      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
