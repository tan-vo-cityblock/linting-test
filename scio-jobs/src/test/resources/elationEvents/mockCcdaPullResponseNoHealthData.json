{
  "id": 151523299033089,
  "base64_ccda": "<ClinicalDocument xmlns="urn:hl7-org:v3" xmlns:cda="urn:hl7-org:v3" xmlns:sdtc="urn:hl7-org:sdtc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">    <realmCode code="US"/>    <typeId extension="POCD_HD000040" root="2.16.840.1.113883.1.3"/>    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.1.1"/>    <templateId root="2.16.840.1.113883.10.20.22.1.1"/>    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.1.2"/>    <templateId root="2.16.840.1.113883.10.20.22.1.2"/>    <id nullFlavor="UNK"/>    <code code="34133-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Summarization of Episode Note"/>    <title>Clinical Care Summary</title>    <effectiveTime value="20190423150457+0000"/>    <confidentialityCode code="N" codeSystem="2.16.840.1.113883.5.25" codeSystemName="Confidentiality Code"/>    <languageCode code="en-US"/>    <setId extension="123" root="abc"/>    <versionNumber value="1"/>    <recordTarget>        <patientRole>            <id extension="998991" root="2.16.840.1.113883.19.5.99999.2"/>            <addr/>            <telecom use="HP" value="tel:555-444-3333"/>            <patient>                <name use="L">                    <family>Patient</family>                    <given>Demo</given>                </name>                <administrativeGenderCode code="M" codeSystem="2.16.840.1.113883.5.1" codeSystemName="HL7 AdministrativeGender" displayName="Male"/>                <birthTime value="19990116"/>                <raceCode nullFlavor="UNK"/>                <sdtc:raceCode nullFlavor="UNK"/>                <ethnicGroupCode nullFlavor="UNK"/>                <birthplace>                    <place>                        <addr/>                    </place>                </birthplace>                <languageCommunication>                    <languageCode/>                    <modeCode code="ESP" codeSystem="2.16.840.1.113883.5.60" codeSystemName="LanguageAbilityMode"/>                    <proficiencyLevelCode code="G" codeSystem="2.16.840.1.113883.5.61" codeSystemName="LanguageAbilityProficiency" displayName="Good"/>                    <preferenceInd value="true"/>                </languageCommunication>            </patient>            <providerOrganization>                <id root="b7d84d82-bfca-599b-87c1-7d726e9796e1"/>                <name>Cityblock Health</name>                <telecom use="WP" value="203-518-4566"/>                <addr>                    <state>CT</state>                    <city>Waterbury</city>                    <postalCode>06702</postalCode>                    <streetAddressLine>76 Center Street</streetAddressLine>                    <streetAddressLine>3rd Floor</streetAddressLine>                </addr>            </providerOrganization>        </patientRole>    </recordTarget>    <author>        <time value="20190423150457+0000"/>        <assignedAuthor>            <id root="1d53788d-7db3-5df8-bcc7-370b84dd7813"/>            <addr>                <state>CT</state>                <city>Waterbury</city>                <postalCode>06702</postalCode>                <streetAddressLine>76 Center Street</streetAddressLine>                <streetAddressLine>3rd Floor</streetAddressLine>            </addr>            <telecom use="WP" value="tel:203-518-4566"/>            <assignedPerson>                <name>                    <family>Carty</family>                    <given>Marcy</given>                    <given>Gleit</given>                    <suffix>MD, MPH</suffix>                </name>            </assignedPerson>            <representedOrganization>                <id root="4c510877-ee79-551b-9bed-90c0fe52969b"/>                <name>Cityblock Health</name>            </representedOrganization>        </assignedAuthor>    </author>    <dataEnterer>        <assignedEntity>            <id root="98dd9cef-92d4-5ac8-af33-c04ac4ba5163"/>            <addr>                <state>CT</state>                <city>Waterbury</city>                <postalCode>06702</postalCode>                <streetAddressLine>76 Center Street</streetAddressLine>                <streetAddressLine>3rd Floor</streetAddressLine>            </addr>            <telecom use="WP" value="tel:203-518-4566"/>            <assignedPerson>                <name>                    <family>Coffin</family>                    <given>Theresa</given>                </name>            </assignedPerson>        </assignedEntity>    </dataEnterer>    <informant>        <assignedEntity>            <id root="5711b0f3-cc1d-5628-ab8e-8ef7f83329e8"/>            <addr>                <state>CT</state>                <city>Waterbury</city>                <postalCode>06702</postalCode>                <streetAddressLine>76 Center Street</streetAddressLine>                <streetAddressLine>3rd Floor</streetAddressLine>            </addr>            <assignedPerson>                <name>                    <family>Carty</family>                    <given>Marcy</given>                    <given>Gleit</given>                    <suffix>MD, MPH</suffix>                </name>            </assignedPerson>            <representedOrganization>                <id root="17145b9f-7039-5243-afed-c7e17cb016c4"/>                <name>Cityblock Health</name>            </representedOrganization>        </assignedEntity>    </informant>    <custodian>        <assignedCustodian>            <representedCustodianOrganization>                <id root="ddf388c2-0e34-554e-b39d-acf64a09350d"/>                <name>Cityblock Health</name>                <telecom use="WP" value="tel:203-518-4566"/>                <addr>                    <state>CT</state>                    <city>Waterbury</city>                    <postalCode>06702</postalCode>                    <streetAddressLine>76 Center Street</streetAddressLine>                    <streetAddressLine>3rd Floor</streetAddressLine>                </addr>            </representedCustodianOrganization>        </assignedCustodian>    </custodian>    <documentationOf typeCode="DOC">        <serviceEvent classCode="PCPR">            <effectiveTime>                <low value="20190423151759+0000"/>                <high value="20190423151759+0000"/>            </effectiveTime>            <performer typeCode="PRF">                <assignedEntity>                    <id root="c860ae68-bd93-5c5e-bcd2-5090010fd7fd"/>                    <telecom use="WP" value=""/>                    <assignedPerson>                        <name>                            <given>Stephanie</given>                            <family>APRN</family>                        </name>                    </assignedPerson>                </assignedEntity>            </performer>        </serviceEvent>    </documentationOf>    <component>        <structuredBody>            <component>                <section>                    <templateId extension="2014-06-09" root="1.3.6.1.4.1.19376.1.5.3.1.3.1"/>                    <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.1"/>                    <code code="42349-1" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Reason for Referral"/>                    <title>Reason for Referral</title>                    <text>Not Available</text>                </section>            </component>            <component>                <section>                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.2.6.1"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.6.1"/>                    <code code="48765-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Allergies, adverse reactions, alerts"/>                    <title>Allergies, adverse reactions, alerts</title>                    <text>No Known Allergies</text>                    <entry typeCode="DRIV">                        <act classCode="ACT" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.30"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.30"/>                            <id nullFlavor="UNK"/>                            <code code="48765-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Allergies, adverse reactions, alerts"/>                            <statusCode code="active"/>                            <effectiveTime>                                <low value="20190423003532+0000"/>                            </effectiveTime>                            <entryRelationship typeCode="SUBJ">                                <observation classCode="OBS" moodCode="EVN" negationInd="true">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.7"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                                    <id nullFlavor="UNK"/>                                    <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Assertion"/>                                    <statusCode code="completed"/>                                    <effectiveTime nullFlavor="UNK"/>                                    <value code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance (disorder)" xsi:type="CD"/>                                    <participant typeCode="CSM">                                        <participantRole classCode="MANU">                                            <playingEntity classCode="MMAT">                                                <code nullFlavor="UNK"/>                                            </playingEntity>                                        </participantRole>                                    </participant>                                </observation>                            </entryRelationship>                        </act>                    </entry>                </section>            </component>            <component>                <section nullFlavor="NI">                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.2.1.1"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.1.1"/>                    <code code="10160-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="History of medication use"/>                    <title>History of medication use</title>                    <text>No Known Medications</text>                </section>            </component>            <component>                <section>                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.2.5.1"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.5.1"/>                    <code code="11450-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Problem List"/>                    <title>Problem List</title>                    <text>No Known Problems</text>                    <entry typeCode="DRIV">                        <act classCode="ACT" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.3"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.3"/>                            <id nullFlavor="UNK"/>                            <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>                            <statusCode code="completed"/>                            <effectiveTime>                                <low value="20190423003532+0000"/>                            </effectiveTime>                            <entryRelationship typeCode="SUBJ">                                <observation classCode="OBS" moodCode="EVN" negationInd="true">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.4"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                                    <id nullFlavor="UNK"/>                                    <code nullFlavor="UNK"/>                                    <text>                                        <reference value="#problem1"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime>                                        <low value="20190423003532+0000"/>                                    </effectiveTime>                                    <value code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="No Known Problems" xsi:type="CD"/>                                </observation>                            </entryRelationship>                        </act>                    </entry>                </section>            </component>            <component>                <section nullFlavor="NI">                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.2.22.1"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.22.1"/>                    <code code="46240-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Encounters"/>                    <title>Encounters</title>                    <text>Not Available</text>                </section>            </component>            <component>                <section>                    <templateId root="2.16.840.1.113883.10.20.22.2.2"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.2.1"/>                    <code code="11369-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Immunizations"/>                    <title>Immunizations</title>                    <text>No Known Immunization History</text>                    <entry typeCode="DRIV">                        <substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="true">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.52"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.52"/>                            <id nullFlavor="UNK"/>                            <statusCode code="completed"/>                            <effectiveTime nullFlavor="UNK"/>                            <consumable>                                <manufacturedProduct classCode="MANU">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.54"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.54"/>                                    <id nullFlavor="UNK"/>                                    <manufacturedMaterial>                                        <code nullFlavor="UNK">                                            <translation code="71181003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Vaccine"/>                                        </code>                                    </manufacturedMaterial>                                </manufacturedProduct>                            </consumable>                        </substanceAdministration>                    </entry>                </section>            </component>            <component>                <section nullFlavor="NI">                    <templateId root="2.16.840.1.113883.10.20.22.2.4.1"/>                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.2.4.1"/>                    <code code="8716-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Vital Signs"/>                    <title>Vital Signs</title>                    <text>Not Available</text>                </section>            </component>            <component>                <section>                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.2.17"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.17"/>                    <code code="29762-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Social History"/>                    <title>Social History</title>                    <text>                        <table>                            <thead>                                <tr>                                    <th colspan="4">Birth Sex</th>                                </tr>                            </thead>                            <tbody>                                <tr>                                    <td>Male</td>                                </tr>                            </tbody>                        </table>                    </text>                    <entry>                        <observation classCode="OBS" moodCode="EVN">                            <templateId extension="2016-06-01" root="2.16.840.1.113883.10.20.22.4.200"/>                            <code code="76689-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Sex Assigned At Birth"/>                            <statusCode code="completed"/>                            <effectiveTime value="19300710"/>                            <value code="F" codeSystem="2.16.840.1.113883.5.1" codeSystemName="HL7 AdministrativeGender" displayName="Female" xsi:type="CD"/>                        </observation>                    </entry>                </section>            </component>            <component>                <section nullFlavor="NI">                    <templateId root="2.16.840.1.113883.10.20.22.2.7"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.7.1"/>                    <code code="47519-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="History of Procedures"/>                    <title>History of Procedures</title>                    <text>No Procedure Information</text>                </section>            </component>            <component>                <section nullFlavor="NI">                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.2.23"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.23"/>                    <code code="46264-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Medical Equipment"/>                    <title>Implantable Devices</title>                    <text>No Information</text>                </section>            </component>            <component>                <section nullFlavor="NI">                    <templateId root="2.16.840.1.113883.10.20.22.2.3.1"/>                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.2.3.1"/>                    <code code="30954-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Relevant diagnostic tests and/or laboratory data"/>                    <title>Relevant diagnostic tests and/or laboratory data</title>                    <text>No Lab Tests/Results Information</text>                </section>            </component>            <component>                <section>                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.2.14"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.14"/>                    <code code="47420-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Functional Status"/>                    <title>Functional Status</title>                    <text>No Information</text>                </section>            </component>            <component>                <section>                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.2.56"/>                    <code code="10190-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Mental Status"/>                    <title>Mental Status</title>                    <text>No Information</text>                </section>            </component>            <component>                <section>                    <templateId root="2.16.840.1.113883.10.20.22.2.8"/>                    <code code="51848-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Assessments"/>                    <title>Assessments</title>                    <text>Not Available</text>                </section>            </component>            <component>                <section>                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.2.10"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.10"/>                    <code code="18776-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Plan of Care"/>                    <title>Plan of Care</title>                    <text>Not Available</text>                </section>            </component>            <component>                <section nullFlavor="NI">                    <templateId root="2.16.840.1.113883.10.20.22.2.60"/>                    <code code="61146-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Goals"/>                    <title>Goals</title>                    <text>Not Available</text>                </section>            </component>            <component>                <section nullFlavor="NI">                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.2.58"/>                    <code code="75310-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Health Concerns Document"/>                    <title>Health Concerns</title>                    <text>No Information</text>                </section>            </component>        </structuredBody>    </component></ClinicalDocument>"
}