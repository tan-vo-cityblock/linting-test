{
  "id": 151523299033089,
  "base64_ccda": "<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type="text/xsl" href="CDA.xsl"?><ClinicalDocument xmlns="urn:hl7-org:v3" xmlns:cda="urn:hl7-org:v3" xmlns:sdtc="urn:hl7-org:sdtc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">    <realmCode code="US"/>    <typeId extension="POCD_HD000040" root="2.16.840.1.113883.1.3"/>    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.1.1"/>    <templateId root="2.16.840.1.113883.10.20.22.1.1"/>    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.1.2"/>    <templateId root="2.16.840.1.113883.10.20.22.1.2"/>    <id nullFlavor="UNK"/>    <code code="34133-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Summarization of Episode Note"/>    <title>Clinical Care Summary</title>    <effectiveTime value="20190423150457+0000"/>    <confidentialityCode code="N" codeSystem="2.16.840.1.113883.5.25" codeSystemName="Confidentiality Code"/>    <languageCode code="en-US"/>    <setId extension="123" root="abc"/>    <versionNumber value="1"/>    <recordTarget>        <patientRole>            <id extension="998991" root="2.16.840.1.113883.19.5.99999.2"/>            <addr/>            <telecom use="HP" value="tel:555-444-3333"/>            <patient>                <name use="L">                    <family>Patient</family>                    <given>Demo</given>                </name>                <administrativeGenderCode code="M" codeSystem="2.16.840.1.113883.5.1" codeSystemName="HL7 AdministrativeGender" displayName="Male"/>                <birthTime value="19990116"/>                <raceCode nullFlavor="UNK"/>                <sdtc:raceCode nullFlavor="UNK"/>                <ethnicGroupCode nullFlavor="UNK"/>                <birthplace>                    <place>                        <addr/>                    </place>                </birthplace>                <languageCommunication>                    <languageCode/>                    <modeCode code="ESP" codeSystem="2.16.840.1.113883.5.60" codeSystemName="LanguageAbilityMode"/>                    <proficiencyLevelCode code="G" codeSystem="2.16.840.1.113883.5.61" codeSystemName="LanguageAbilityProficiency" displayName="Good"/>                    <preferenceInd value="true"/>                </languageCommunication>            </patient>            <providerOrganization>                <id root="b7d84d82-bfca-599b-87c1-7d726e9796e1"/>                <name>Cityblock Health</name>                <telecom use="WP" value="203-518-4566"/>                <addr>                    <state>CT</state>                    <city>Waterbury</city>                    <postalCode>06702</postalCode>                    <streetAddressLine>76 Center Street</streetAddressLine>                    <streetAddressLine>3rd Floor</streetAddressLine>                </addr>            </providerOrganization>        </patientRole>    </recordTarget>    <author>        <time value="20190423150457+0000"/>        <assignedAuthor>            <id root="1d53788d-7db3-5df8-bcc7-370b84dd7813"/>            <addr>                <state>CT</state>                <city>Waterbury</city>                <postalCode>06702</postalCode>                <streetAddressLine>76 Center Street</streetAddressLine>                <streetAddressLine>3rd Floor</streetAddressLine>            </addr>            <telecom use="WP" value="tel:203-518-4566"/>            <assignedPerson>                <name>                    <family>Carty</family>                    <given>Marcy</given>                    <given>Gleit</given>                    <suffix>MD, MPH</suffix>                </name>            </assignedPerson>            <representedOrganization>                <id root="4c510877-ee79-551b-9bed-90c0fe52969b"/>                <name>Cityblock Health</name>            </representedOrganization>        </assignedAuthor>    </author>    <dataEnterer>        <assignedEntity>            <id root="98dd9cef-92d4-5ac8-af33-c04ac4ba5163"/>            <addr>                <state>CT</state>                <city>Waterbury</city>                <postalCode>06702</postalCode>                <streetAddressLine>76 Center Street</streetAddressLine>                <streetAddressLine>3rd Floor</streetAddressLine>            </addr>            <telecom use="WP" value="tel:203-518-4566"/>            <assignedPerson>                <name>                    <family>Coffin</family>                    <given>Theresa</given>                </name>            </assignedPerson>        </assignedEntity>    </dataEnterer>    <informant>        <assignedEntity>            <id root="5711b0f3-cc1d-5628-ab8e-8ef7f83329e8"/>            <addr>                <state>CT</state>                <city>Waterbury</city>                <postalCode>06702</postalCode>                <streetAddressLine>76 Center Street</streetAddressLine>                <streetAddressLine>3rd Floor</streetAddressLine>            </addr>            <assignedPerson>                <name>                    <family>Carty</family>                    <given>Marcy</given>                    <given>Gleit</given>                    <suffix>MD, MPH</suffix>                </name>            </assignedPerson>            <representedOrganization>                <id root="17145b9f-7039-5243-afed-c7e17cb016c4"/>                <name>Cityblock Health</name>            </representedOrganization>        </assignedEntity>    </informant>    <custodian>        <assignedCustodian>            <representedCustodianOrganization>                <id root="ddf388c2-0e34-554e-b39d-acf64a09350d"/>                <name>Cityblock Health</name>                <telecom use="WP" value="tel:203-518-4566"/>                <addr>                    <state>CT</state>                    <city>Waterbury</city>                    <postalCode>06702</postalCode>                    <streetAddressLine>76 Center Street</streetAddressLine>                    <streetAddressLine>3rd Floor</streetAddressLine>                </addr>            </representedCustodianOrganization>        </assignedCustodian>    </custodian>    <documentationOf typeCode="DOC">        <serviceEvent classCode="PCPR">            <effectiveTime>                <low value="20190423151759+0000"/>                <high value="20190423151759+0000"/>            </effectiveTime>            <performer typeCode="PRF">                <assignedEntity>                    <id root="c860ae68-bd93-5c5e-bcd2-5090010fd7fd"/>                    <telecom use="WP" value=""/>                    <assignedPerson>                        <name>                            <given>Stephanie</given>                            <family>APRN</family>                        </name>                    </assignedPerson>                </assignedEntity>            </performer>        </serviceEvent>    </documentationOf>    <component>        <structuredBody>            <component>                <section>                    <templateId extension="2014-06-09" root="1.3.6.1.4.1.19376.1.5.3.1.3.1"/>                    <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.1"/>                    <code code="42349-1" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Reason for Referral"/>                    <title>Reason for Referral</title>                    <text>Not Available</text>                </section>            </component>            <component>                <section>                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.2.6.1"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.6.1"/>                    <code code="48765-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Allergies, adverse reactions, alerts"/>                    <title>Allergies, adverse reactions, alerts</title>                    <text>                        <table border="1" width="100%">                            <thead>                                <tr>                                    <th>Substance</th>                                    <th>Overall Severity</th>                                    <th>Reaction</th>                                    <th>Reaction Severity</th>                                    <th>Status</th>                                </tr>                            </thead>                            <tbody>                                <tr>                                    <td ID="allergen1">Penicillin</td>                                    <td/>                                    <td ID="reaction1"/>                                    <td ID="severity1">Unknown</td>                                    <td>Active</td>                                </tr>                                <tr>                                    <td ID="allergen2">Lovastatin</td>                                    <td/>                                    <td ID="reaction2">muscle pain</td>                                    <td ID="severity2">Moderate</td>                                    <td>Active</td>                                </tr>                                <tr>                                    <td ID="allergen3">Lisinopril</td>                                    <td/>                                    <td ID="reaction3">dry cough</td>                                    <td ID="severity3">Unknown</td>                                    <td>Active</td>                                </tr>                            </tbody>                        </table>                    </text>                    <entry typeCode="DRIV">                        <act classCode="ACT" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.30"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.30"/>                            <id nullFlavor="UNK"/>                            <code code="48765-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Allergies, adverse reactions, alerts"/>                            <statusCode code="active"/>                            <effectiveTime nullFlavor="UNK"/>                            <entryRelationship inversionInd="true" typeCode="SUBJ">                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.7"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                                    <id root="4adc1020-7b14-11db-9fe1-0800200c9a66"/>                                    <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Assertion"/>                                    <statusCode code="completed"/>                                    <effectiveTime nullFlavor="UNK"/>                                    <value code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance (disorder)" xsi:type="CD"/>                                    <participant typeCode="CSM">                                        <participantRole classCode="MANU">                                            <playingEntity classCode="MMAT">                                                <code codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="Penicillin"/>                                            </playingEntity>                                        </participantRole>                                    </participant>                                    <entryRelationship inversionInd="true" typeCode="SUBJ">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId root="2.16.840.1.113883.10.20.22.4.28"/>                                            <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>                                            <statusCode code="completed"/>                                            <value code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Active" xsi:type="CE"/>                                        </observation>                                    </entryRelationship>                                    <entryRelationship inversionInd="true" typeCode="MFST">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                                            <id nullFlavor="UNK"/>                                            <code nullFlavor="UNK"/>                                            <statusCode code="completed"/>                                            <value nullFlavor="UNK"/>                                            <entryRelationship inversionInd="true" typeCode="SUBJ">                                                <observation classCode="OBS" moodCode="EVN">                                                    <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                                                    <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                                                    <text>                                                        <reference value="#severity1"/>                                                    </text>                                                    <statusCode code="completed"/>                                                    <value codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Unknown" xsi:type="CD"/>                                                </observation>                                            </entryRelationship>                                        </observation>                                    </entryRelationship>                                </observation>                            </entryRelationship>                        </act>                    </entry>                    <entry typeCode="DRIV">                        <act classCode="ACT" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.30"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.30"/>                            <id nullFlavor="UNK"/>                            <code code="48765-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Allergies, adverse reactions, alerts"/>                            <statusCode code="active"/>                            <effectiveTime>                                <low value="20070101"/>                            </effectiveTime>                            <entryRelationship inversionInd="true" typeCode="SUBJ">                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.7"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                                    <id root="4adc1020-7b14-11db-9fe1-0800200c9a66"/>                                    <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Assertion"/>                                    <statusCode code="completed"/>                                    <effectiveTime>                                        <low value="20070101"/>                                    </effectiveTime>                                    <value code="59037007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Drug intolerance (disorder)" xsi:type="CD"/>                                    <participant typeCode="CSM">                                        <participantRole classCode="MANU">                                            <playingEntity classCode="MMAT">                                                <code code="433849" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="Lovastatin"/>                                            </playingEntity>                                        </participantRole>                                    </participant>                                    <entryRelationship inversionInd="true" typeCode="SUBJ">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId root="2.16.840.1.113883.10.20.22.4.28"/>                                            <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>                                            <statusCode code="completed"/>                                            <value code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Active" xsi:type="CE"/>                                        </observation>                                    </entryRelationship>                                    <entryRelationship inversionInd="true" typeCode="MFST">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                                            <id nullFlavor="UNK"/>                                            <code nullFlavor="UNK"/>                                            <statusCode code="completed"/>                                            <effectiveTime>                                                <low value="20070101"/>                                            </effectiveTime>                                            <value codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="muscle pain" xsi:type="CD"/>                                            <entryRelationship inversionInd="true" typeCode="SUBJ">                                                <observation classCode="OBS" moodCode="EVN">                                                    <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                                                    <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                                                    <text>                                                        <reference value="#severity2"/>                                                    </text>                                                    <statusCode code="completed"/>                                                    <value code="6736007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Moderate" xsi:type="CD"/>                                                </observation>                                            </entryRelationship>                                        </observation>                                    </entryRelationship>                                </observation>                            </entryRelationship>                        </act>                    </entry>                    <entry typeCode="DRIV">                        <act classCode="ACT" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.30"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.30"/>                            <id nullFlavor="UNK"/>                            <code code="48765-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Allergies, adverse reactions, alerts"/>                            <statusCode code="active"/>                            <effectiveTime>                                <low value="20110101"/>                            </effectiveTime>                            <entryRelationship inversionInd="true" typeCode="SUBJ">                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.7"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                                    <id root="4adc1020-7b14-11db-9fe1-0800200c9a66"/>                                    <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Assertion"/>                                    <statusCode code="completed"/>                                    <effectiveTime>                                        <low value="20110101"/>                                    </effectiveTime>                                    <value code="59037007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Drug intolerance (disorder)" xsi:type="CD"/>                                    <participant typeCode="CSM">                                        <participantRole classCode="MANU">                                            <playingEntity classCode="MMAT">                                                <code code="311354" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="Lisinopril"/>                                            </playingEntity>                                        </participantRole>                                    </participant>                                    <entryRelationship inversionInd="true" typeCode="SUBJ">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId root="2.16.840.1.113883.10.20.22.4.28"/>                                            <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>                                            <statusCode code="completed"/>                                            <value code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Active" xsi:type="CE"/>                                        </observation>                                    </entryRelationship>                                    <entryRelationship inversionInd="true" typeCode="MFST">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                                            <id nullFlavor="UNK"/>                                            <code nullFlavor="UNK"/>                                            <statusCode code="completed"/>                                            <effectiveTime>                                                <low value="20110101"/>                                            </effectiveTime>                                            <value codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="dry cough" xsi:type="CD"/>                                            <entryRelationship inversionInd="true" typeCode="SUBJ">                                                <observation classCode="OBS" moodCode="EVN">                                                    <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                                                    <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                                                    <text>                                                        <reference value="#severity3"/>                                                    </text>                                                    <statusCode code="completed"/>                                                    <value codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Unknown" xsi:type="CD"/>                                                </observation>                                            </entryRelationship>                                        </observation>                                    </entryRelationship>                                </observation>                            </entryRelationship>                        </act>                    </entry>                </section>            </component>            <component>                <section>                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.2.1.1"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.1.1"/>                    <code code="10160-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="History of medication use"/>                    <title>History of medication use</title>                    <text>                        <table border="1" width="100%">                            <thead>                                <tr>                                    <th>Medication Class</th>                                    <th># fills</th>                                    <th>Instructions</th>                                    <th>Last fill date</th>                                </tr>                            </thead>                            <tbody>                                <tr>                                    <td ID="medinfo1">MetFORMIN ER 500 mg Tab ER 24hr</td>                                    <td/>                                    <td ID="instruction1">1 tablet orally 2 times per day with meals</td>                                    <td/>                                </tr>                                <tr>                                    <td ID="medinfo2">Eliquis 2.5 mg Tab</td>                                    <td/>                                    <td ID="instruction2"/>                                    <td/>                                </tr>                                <tr>                                    <td ID="medinfo3">Januvia 100 mg Tab</td>                                    <td/>                                    <td ID="instruction3">1 tablet orally daily</td>                                    <td/>                                </tr>                                <tr>                                    <td ID="medinfo4">Ibuprofen 200 mg Tab</td>                                    <td/>                                    <td ID="instruction4"/>                                    <td/>                                </tr>                                <tr>                                    <td ID="medinfo5">Amoxicillin 250 mg Cap</td>                                    <td/>                                    <td ID="instruction5"/>                                    <td/>                                </tr>                            </tbody>                        </table>                    </text>                    <entry typeCode="DRIV">                        <substanceAdministration classCode="SBADM" moodCode="INT">                            <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.16"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.16"/>                            <id nullFlavor="UNK"/>                            <text>1 tablet orally 2 times per day with meals</text>                            <statusCode code="completed"/>                            <effectiveTime xsi:type="IVL_TS">                                <low value="20190213"/>                                <high value="20190313"/>                            </effectiveTime>                            <doseQuantity unit="mg" value="500"/>                            <consumable>                                <manufacturedProduct classCode="MANU">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.23"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.23"/>                                    <id nullFlavor="UNK"/>                                    <manufacturedMaterial>                                        <code code="311571" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="MetFORMIN ER 500 mg Tab ER 24hr"/>                                    </manufacturedMaterial>                                </manufacturedProduct>                            </consumable>                        </substanceAdministration>                    </entry>                    <entry typeCode="DRIV">                        <substanceAdministration classCode="SBADM" moodCode="INT">                            <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.16"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.16"/>                            <id nullFlavor="UNK"/>                            <statusCode code="completed"/>                            <effectiveTime xsi:type="IVL_TS">                                <low value="20190213"/>                            </effectiveTime>                            <doseQuantity unit="mg" value="2.5"/>                            <consumable>                                <manufacturedProduct classCode="MANU">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.23"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.23"/>                                    <id nullFlavor="UNK"/>                                    <manufacturedMaterial>                                        <code code="1364435" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="Eliquis 2.5 mg Tab"/>                                    </manufacturedMaterial>                                </manufacturedProduct>                            </consumable>                        </substanceAdministration>                    </entry>                    <entry typeCode="DRIV">                        <substanceAdministration classCode="SBADM" moodCode="INT">                            <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.16"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.16"/>                            <id nullFlavor="UNK"/>                            <text>1 tablet orally daily</text>                            <statusCode code="completed"/>                            <effectiveTime xsi:type="IVL_TS">                                <low value="20190223"/>                            </effectiveTime>                            <doseQuantity unit="mg" value="100"/>                            <consumable>                                <manufacturedProduct classCode="MANU">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.23"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.23"/>                                    <id nullFlavor="UNK"/>                                    <manufacturedMaterial>                                        <code code="665033" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="Januvia 100 mg Tab"/>                                    </manufacturedMaterial>                                </manufacturedProduct>                            </consumable>                        </substanceAdministration>                    </entry>                    <entry typeCode="DRIV">                        <substanceAdministration classCode="SBADM" moodCode="INT">                            <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.16"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.16"/>                            <id nullFlavor="UNK"/>                            <statusCode code="completed"/>                            <effectiveTime xsi:type="IVL_TS">                                <low value="20190423"/>                            </effectiveTime>                            <doseQuantity unit="mg" value="200"/>                            <consumable>                                <manufacturedProduct classCode="MANU">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.23"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.23"/>                                    <id nullFlavor="UNK"/>                                    <manufacturedMaterial>                                        <code code="310965" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="Ibuprofen 200 mg Tab"/>                                    </manufacturedMaterial>                                </manufacturedProduct>                            </consumable>                        </substanceAdministration>                    </entry>                    <entry typeCode="DRIV">                        <substanceAdministration classCode="SBADM" moodCode="INT">                            <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.16"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.16"/>                            <id nullFlavor="UNK"/>                            <statusCode code="completed"/>                            <effectiveTime xsi:type="IVL_TS">                                <low value="20190423"/>                            </effectiveTime>                            <doseQuantity unit="mg" value="250"/>                            <consumable>                                <manufacturedProduct classCode="MANU">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.23"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.23"/>                                    <id nullFlavor="UNK"/>                                    <manufacturedMaterial>                                        <code code="308182" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="Amoxicillin 250 mg Cap"/>                                    </manufacturedMaterial>                                </manufacturedProduct>                            </consumable>                        </substanceAdministration>                    </entry>                    <entry typeCode="DRIV">                        <substanceAdministration classCode="SBADM" moodCode="INT">                            <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.16"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.16"/>                            <id root="cdbd33f0-6cde-11db-9fe1-0800200c9a66"/>                            <text/>                            <statusCode code="completed"/>                            <effectiveTime xsi:type="IVL_TS">                                <low value="20190424"/>                                <high value="20190424"/>                            </effectiveTime>                            <routeCode nullFlavor="UNK"/>                            <maxDoseQuantity nullFlavor="UNK">                                <numerator nullFlavor="UNK"/>                                <denominator nullFlavor="UNK"/>                            </maxDoseQuantity>                            <administrationUnitCode nullFlavor="UNK"/>                            <consumable>                                <manufacturedProduct classCode="MANU">                                    <templateId root="2.16.840.1.113883.10.20.22.4.23"/>                                    <id nullFlavor="UNK"/>                                    <manufacturedMaterial>                                        <code displayName="testing" nullFlavor="UNK">                                            <translation nullFlavor="UNK"/>                                        </code>                                    </manufacturedMaterial>                                    <manufacturerOrganization/>                                </manufacturedProduct>                            </consumable>                            <entryRelationship typeCode="RSON">                                <observation classCode="OBS" moodCode="EVN">                                    <templateId root="2.16.840.1.113883.10.20.22.4.19"/>                                    <id extension="45665" root="db734647-fc99-424c-a864-7e3cda82e703"/>                                    <code code="404684003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Finding"/>                                    <statusCode code="completed"/>                                    <value nullFlavor="UNK" xsi:type="CE"/>                                </observation>                            </entryRelationship>                            <precondition typeCode="PRCN">                                <templateId root="2.16.840.1.113883.10.20.22.4.25"/>                                <criterion>                                    <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                                    <value nullFlavor="UNK" xsi:type="CE"/>                                </criterion>                            </precondition>                        </substanceAdministration>                    </entry>                </section>            </component>            <component>                <section>                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.2.5.1"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.5.1"/>                    <code code="11450-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Problem List"/>                    <title>Problem List</title>                    <text>                        <table>                            <thead>                                <tr>                                    <th colspan="2">Problems</th>                                </tr>                                <tr>                                    <th>Condition</th>                                    <th>Severity</th>                                </tr>                            </thead>                            <tbody>                                <tr>                                    <td ID="problem1">Anxiety</td>                                    <td>No Data Available</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td ID="problem2">HTN (hypertension)</td>                                    <td>No Data Available</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td ID="problem3">Cancer associated with transplanted organ</td>                                    <td>No Data Available</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td ID="problem4">Type 1 diabetes with retinopathy</td>                                    <td>No Data Available</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td ID="problem5">Pain</td>                                    <td>No Data Available</td>                                </tr>                            </tbody>                        </table>                    </text>                    <entry typeCode="DRIV">                        <act classCode="ACT" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.3"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.3"/>                            <id nullFlavor="UNK"/>                            <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>                            <statusCode code="completed"/>                            <effectiveTime>                                <low value="20170206"/>                            </effectiveTime>                            <entryRelationship typeCode="SUBJ">                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.4"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                                    <id nullFlavor="UNK"/>                                    <code nullFlavor="UNK"/>                                    <text>                                        <reference value="#problem1"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime>                                        <low value="20170206"/>                                    </effectiveTime>                                    <value code="48694002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Anxiety" xsi:type="CD">                                        <translation code="300.00" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9-CM" displayName="Anxiety State Unspecified"/>                                    </value>                                    <entryRelationship typeCode="REFR">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId root="2.16.840.1.113883.10.20.22.4.6"/>                                            <id nullFlavor="UNK"/>                                            <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>                                            <statusCode code="completed"/>                                            <value code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" xsi:type="CD"/>                                        </observation>                                    </entryRelationship>                                    <entryRelationship inversionInd="true" typeCode="SUBJ">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId root="2.16.840.1.113883.10.20.22.4.31"/>                                            <code code="445518008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED-CT" displayName="Age At Onset"/>                                            <statusCode code="completed"/>                                            <value xsi:type="PQ"/>                                        </observation>                                    </entryRelationship>                                </observation>                            </entryRelationship>                        </act>                    </entry>                    <entry typeCode="DRIV">                        <act classCode="ACT" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.3"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.3"/>                            <id nullFlavor="UNK"/>                            <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>                            <statusCode code="completed"/>                            <effectiveTime>                                <low value="20190116"/>                            </effectiveTime>                            <entryRelationship typeCode="SUBJ">                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.4"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                                    <id nullFlavor="UNK"/>                                    <code nullFlavor="UNK"/>                                    <text>                                        <reference value="#problem2"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime>                                        <low value="20190116"/>                                    </effectiveTime>                                    <value code="38341003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="HTN (hypertension)" xsi:type="CD">                                        <translation code="401.9" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9-CM" displayName="Unspecified Essential Hypertension"/>                                    </value>                                    <entryRelationship typeCode="REFR">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId root="2.16.840.1.113883.10.20.22.4.6"/>                                            <id nullFlavor="UNK"/>                                            <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>                                            <statusCode code="completed"/>                                            <value code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" xsi:type="CD"/>                                        </observation>                                    </entryRelationship>                                    <entryRelationship inversionInd="true" typeCode="SUBJ">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId root="2.16.840.1.113883.10.20.22.4.31"/>                                            <code code="445518008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED-CT" displayName="Age At Onset"/>                                            <statusCode code="completed"/>                                            <value xsi:type="PQ"/>                                        </observation>                                    </entryRelationship>                                </observation>                            </entryRelationship>                        </act>                    </entry>                    <entry typeCode="DRIV">                        <act classCode="ACT" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.3"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.3"/>                            <id nullFlavor="UNK"/>                            <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>                            <statusCode code="completed"/>                            <effectiveTime>                                <low value="20190206"/>                            </effectiveTime>                            <entryRelationship typeCode="SUBJ">                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.4"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                                    <id nullFlavor="UNK"/>                                    <code nullFlavor="UNK"/>                                    <text>                                        <reference value="#problem3"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime>                                        <low value="20190206"/>                                    </effectiveTime>                                    <value code="385486001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Cancer associated with transplanted organ" xsi:type="CD">                                        <translation code="199.2" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9-CM" displayName="Malignant Neoplasm Associated With Transplanted Organ"/>                                    </value>                                    <entryRelationship typeCode="REFR">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId root="2.16.840.1.113883.10.20.22.4.6"/>                                            <id nullFlavor="UNK"/>                                            <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>                                            <statusCode code="completed"/>                                            <value code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" xsi:type="CD"/>                                        </observation>                                    </entryRelationship>                                    <entryRelationship inversionInd="true" typeCode="SUBJ">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId root="2.16.840.1.113883.10.20.22.4.31"/>                                            <code code="445518008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED-CT" displayName="Age At Onset"/>                                            <statusCode code="completed"/>                                            <value xsi:type="PQ"/>                                        </observation>                                    </entryRelationship>                                </observation>                            </entryRelationship>                        </act>                    </entry>                    <entry typeCode="DRIV">                        <act classCode="ACT" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.3"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.3"/>                            <id nullFlavor="UNK"/>                            <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>                            <statusCode code="completed"/>                            <effectiveTime>                                <low value="20190206"/>                            </effectiveTime>                            <entryRelationship typeCode="SUBJ">                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.4"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                                    <id nullFlavor="UNK"/>                                    <code nullFlavor="UNK"/>                                    <text>                                        <reference value="#problem4"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime>                                        <low value="20190206"/>                                    </effectiveTime>                                    <value code="46635009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Type 1 diabetes with retinopathy" xsi:type="CD">                                        <translation code="250.51" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9-CM" displayName="Diabetes With Ophthalmic Manifestations Type I [Juvenile Type] Not Stated As Uncontrolled"/>                                    </value>                                    <entryRelationship typeCode="REFR">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId root="2.16.840.1.113883.10.20.22.4.6"/>                                            <id nullFlavor="UNK"/>                                            <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>                                            <statusCode code="completed"/>                                            <value code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" xsi:type="CD"/>                                        </observation>                                    </entryRelationship>                                    <entryRelationship inversionInd="true" typeCode="SUBJ">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId root="2.16.840.1.113883.10.20.22.4.31"/>                                            <code code="445518008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED-CT" displayName="Age At Onset"/>                                            <statusCode code="completed"/>                                            <value xsi:type="PQ"/>                                        </observation>                                    </entryRelationship>                                </observation>                            </entryRelationship>                        </act>                    </entry>                    <entry typeCode="DRIV">                        <act classCode="ACT" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.3"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.3"/>                            <id nullFlavor="UNK"/>                            <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>                            <statusCode code="completed"/>                            <effectiveTime>                                <low value="20190401"/>                            </effectiveTime>                            <entryRelationship typeCode="SUBJ">                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.4"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                                    <id nullFlavor="UNK"/>                                    <code nullFlavor="UNK"/>                                    <text>                                        <reference value="#problem5"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime>                                        <low value="20190401"/>                                    </effectiveTime>                                    <value code="22253000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Pain" xsi:type="CD">                                        <translation code="780.96" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9-CM" displayName="Generalized Pain"/>                                    </value>                                    <entryRelationship typeCode="REFR">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId root="2.16.840.1.113883.10.20.22.4.6"/>                                            <id nullFlavor="UNK"/>                                            <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>                                            <statusCode code="completed"/>                                            <value code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" xsi:type="CD"/>                                        </observation>                                    </entryRelationship>                                    <entryRelationship inversionInd="true" typeCode="SUBJ">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId root="2.16.840.1.113883.10.20.22.4.31"/>                                            <code code="445518008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED-CT" displayName="Age At Onset"/>                                            <statusCode code="completed"/>                                            <value xsi:type="PQ"/>                                        </observation>                                    </entryRelationship>                                </observation>                            </entryRelationship>                        </act>                    </entry>                </section>            </component>            <component>                <section>                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.2.22.1"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.22.1"/>                    <code code="46240-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Encounters"/>                    <title>Encounters</title>                    <text>                        <table>                            <caption>Encounters</caption>                            <thead>                                <tr>                                    <th>Type</th>                                    <th>Facility</th>                                    <th>Date of Service</th>                                    <th>Diagnosis/Complaint</th>                                </tr>                            </thead>                            <tbody>                                <tr>                                    <td>No Data Available</td>                                    <td>No Data Available</td>                                    <td>04/11/2019</td>                                    <td ID="Encounter1">Essential hypertension</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>No Data Available</td>                                    <td>No Data Available</td>                                    <td>04/01/2019</td>                                    <td ID="Encounter2">No Data Available</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>No Data Available</td>                                    <td>No Data Available</td>                                    <td>03/09/2019</td>                                    <td ID="Encounter3">Diabetes mellitus</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>No Data Available</td>                                    <td>No Data Available</td>                                    <td>03/09/2019</td>                                    <td ID="Encounter4">No Data Available</td>                                </tr>                            </tbody>                        </table>                    </text>                    <entry typeCode="DRIV">                        <encounter classCode="ENC" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.49"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.49"/>                            <id nullFlavor="UNK"/>                            <code codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT">                                <originalText>                                    <reference value="#Encounter1"/>                                </originalText>                            </code>                            <effectiveTime value="20190411"/>                            <entryRelationship typeCode="RSON">                                <observation classCode="OBS" moodCode="EVN">                                    <templateId root="2.16.840.1.113883.10.20.22.4.19"/>                                    <id nullFlavor="UNK"/>                                    <code code="404684003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Finding"/>                                    <statusCode code="completed"/>                                    <effectiveTime>                                        <low value="20190411"/>                                    </effectiveTime>                                    <value code="59621000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Essential hypertension" xsi:type="CD"/>                                </observation>                            </entryRelationship>                            <entryRelationship typeCode="SUBJ">                                <act classCode="ACT" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.80"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.80"/>                                    <id nullFlavor="UNK"/>                                    <code code="29308-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="ENCOUNTER DIAGNOSIS"/>                                    <effectiveTime>                                        <low value="20190411"/>                                    </effectiveTime>                                    <entryRelationship inversionInd="false" typeCode="SUBJ">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.4"/>                                            <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                                            <id nullFlavor="UNK"/>                                            <code code="404684003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Finding">                                                <translation code="75321-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Clinical finding"/>                                            </code>                                            <statusCode code="completed"/>                                            <effectiveTime>                                                <low value="20190411"/>                                            </effectiveTime>                                            <value code="59621000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Essential hypertension" xsi:type="CD"/>                                        </observation>                                    </entryRelationship>                                </act>                            </entryRelationship>                        </encounter>                    </entry>                    <entry typeCode="DRIV">                        <encounter classCode="ENC" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.49"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.49"/>                            <id nullFlavor="UNK"/>                            <code>                                <originalText>                                    <reference value="#Encounter2"/>                                </originalText>                            </code>                            <effectiveTime value="20190401"/>                        </encounter>                    </entry>                    <entry typeCode="DRIV">                        <encounter classCode="ENC" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.49"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.49"/>                            <id nullFlavor="UNK"/>                            <code codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT">                                <originalText>                                    <reference value="#Encounter3"/>                                </originalText>                            </code>                            <effectiveTime value="20190309"/>                            <entryRelationship typeCode="RSON">                                <observation classCode="OBS" moodCode="EVN">                                    <templateId root="2.16.840.1.113883.10.20.22.4.19"/>                                    <id nullFlavor="UNK"/>                                    <code code="404684003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Finding"/>                                    <statusCode code="completed"/>                                    <effectiveTime>                                        <low value="20190309"/>                                    </effectiveTime>                                    <value code="73211009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Diabetes mellitus" xsi:type="CD"/>                                </observation>                            </entryRelationship>                            <entryRelationship typeCode="RSON">                                <observation classCode="OBS" moodCode="EVN">                                    <templateId root="2.16.840.1.113883.10.20.22.4.19"/>                                    <id nullFlavor="UNK"/>                                    <code code="404684003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Finding"/>                                    <statusCode code="completed"/>                                    <effectiveTime>                                        <low value="20190309"/>                                    </effectiveTime>                                    <value code="443694000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Type II diabetes mellitus uncontrolled" xsi:type="CD"/>                                </observation>                            </entryRelationship>                            <entryRelationship typeCode="RSON">                                <observation classCode="OBS" moodCode="EVN">                                    <templateId root="2.16.840.1.113883.10.20.22.4.19"/>                                    <id nullFlavor="UNK"/>                                    <code code="404684003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Finding"/>                                    <statusCode code="completed"/>                                    <effectiveTime>                                        <low value="20190309"/>                                    </effectiveTime>                                    <value code="59621000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Essential hypertension" xsi:type="CD"/>                                </observation>                            </entryRelationship>                            <entryRelationship typeCode="SUBJ">                                <act classCode="ACT" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.80"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.80"/>                                    <id nullFlavor="UNK"/>                                    <code code="29308-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="ENCOUNTER DIAGNOSIS"/>                                    <effectiveTime>                                        <low value="20190309"/>                                    </effectiveTime>                                    <entryRelationship inversionInd="false" typeCode="SUBJ">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.4"/>                                            <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                                            <id nullFlavor="UNK"/>                                            <code code="404684003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Finding">                                                <translation code="75321-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Clinical finding"/>                                            </code>                                            <statusCode code="completed"/>                                            <effectiveTime>                                                <low value="20190309"/>                                            </effectiveTime>                                            <value code="73211009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Diabetes mellitus" xsi:type="CD"/>                                        </observation>                                    </entryRelationship>                                </act>                            </entryRelationship>                            <entryRelationship typeCode="SUBJ">                                <act classCode="ACT" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.80"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.80"/>                                    <id nullFlavor="UNK"/>                                    <code code="29308-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="ENCOUNTER DIAGNOSIS"/>                                    <effectiveTime>                                        <low value="20190309"/>                                    </effectiveTime>                                    <entryRelationship inversionInd="false" typeCode="SUBJ">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.4"/>                                            <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                                            <id nullFlavor="UNK"/>                                            <code code="404684003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Finding">                                                <translation code="75321-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Clinical finding"/>                                            </code>                                            <statusCode code="completed"/>                                            <effectiveTime>                                                <low value="20190309"/>                                            </effectiveTime>                                            <value code="443694000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Type II diabetes mellitus uncontrolled" xsi:type="CD"/>                                        </observation>                                    </entryRelationship>                                </act>                            </entryRelationship>                            <entryRelationship typeCode="SUBJ">                                <act classCode="ACT" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.80"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.80"/>                                    <id nullFlavor="UNK"/>                                    <code code="29308-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="ENCOUNTER DIAGNOSIS"/>                                    <effectiveTime>                                        <low value="20190309"/>                                    </effectiveTime>                                    <entryRelationship inversionInd="false" typeCode="SUBJ">                                        <observation classCode="OBS" moodCode="EVN">                                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.4"/>                                            <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                                            <id nullFlavor="UNK"/>                                            <code code="404684003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Finding">                                                <translation code="75321-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Clinical finding"/>                                            </code>                                            <statusCode code="completed"/>                                            <effectiveTime>                                                <low value="20190309"/>                                            </effectiveTime>                                            <value code="59621000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Essential hypertension" xsi:type="CD"/>                                        </observation>                                    </entryRelationship>                                </act>                            </entryRelationship>                        </encounter>                    </entry>                    <entry typeCode="DRIV">                        <encounter classCode="ENC" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.49"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.49"/>                            <id nullFlavor="UNK"/>                            <code codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT">                                <originalText>                                    <reference value="#Encounter4"/>                                </originalText>                            </code>                            <effectiveTime value="20190309"/>                        </encounter>                    </entry>                </section>            </component>            <component>                <section>                    <templateId root="2.16.840.1.113883.10.20.22.2.2"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.2.1"/>                    <code code="11369-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Immunizations"/>                    <title>Immunizations</title>                    <text>                        <table border="1" width="100%">                            <thead>                                <tr>                                    <th>Vaccine</th>                                    <th>Date</th>                                    <th>Status</th>                                </tr>                            </thead>                            <tbody>                                <tr>                                    <td ID="immunization1">Pneumococcal 13-valent conjugate vaccine (PCV13)</td>                                    <td>2019-03-09</td>                                    <td>complete</td>                                </tr>                                <tr>                                    <td ID="immunization2">ZOS, brand unknown</td>                                    <td>2015-10-04</td>                                    <td>complete</td>                                </tr>                            </tbody>                        </table>                    </text>                    <entry typeCode="DRIV">                        <substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="false">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.52"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.52"/>                            <id nullFlavor="UNK"/>                            <statusCode code="completed"/>                            <effectiveTime value="20190309"/>                            <doseQuantity unit="ml" value="0.5"/>                            <consumable>                                <manufacturedProduct classCode="MANU">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.54"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.54"/>                                    <id nullFlavor="UNK"/>                                    <manufacturedMaterial>                                        <code code="133" codeSystem="2.16.840.1.113883.12.292" codeSystemName="CVX" displayName="Pneumococcal 13-valent conjugate vaccine (PCV13)"/>                                        <lotNumberText>1234455</lotNumberText>                                    </manufacturedMaterial>                                </manufacturedProduct>                            </consumable>                        </substanceAdministration>                    </entry>                    <entry typeCode="DRIV">                        <substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="false">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.52"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.52"/>                            <id nullFlavor="UNK"/>                            <statusCode code="completed"/>                            <effectiveTime value="20151004"/>                            <doseQuantity/>                            <consumable>                                <manufacturedProduct classCode="MANU">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.54"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.54"/>                                    <id nullFlavor="UNK"/>                                    <manufacturedMaterial>                                        <code codeSystem="2.16.840.1.113883.12.292" codeSystemName="CVX" displayName="ZOS, brand unknown"/>                                    </manufacturedMaterial>                                </manufacturedProduct>                            </consumable>                        </substanceAdministration>                    </entry>                </section>            </component>            <component>                <section>                    <templateId root="2.16.840.1.113883.10.20.22.2.4.1"/>                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.2.4.1"/>                    <code code="8716-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Vital Signs"/>                    <title>Vital Signs</title>                    <text>                        <table>                            <thead>                                <tr>                                    <th colspan="4">Vital Signs</th>                                </tr>                                <tr>                                    <th>Date</th>                                    <th>Vital</th>                                    <th>value</th>                                    <th>Units</th>                                </tr>                            </thead>                            <tbody>                                <tr>                                    <td>2019-03-10</td>                                    <td ID="vital1">Height</td>                                    <td>182.88</td>                                    <td>cm</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>2019-03-10</td>                                    <td ID="vital2">Weight</td>                                    <td>78.01868819740542</td>                                    <td>kg</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>2019-03-10</td>                                    <td ID="vital3">Body Mass Index (BMI)</td>                                    <td>23.33</td>                                    <td>kg/m2</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>2019-03-10</td>                                    <td ID="vital4">Heart Rate</td>                                    <td>88</td>                                    <td>/min</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>2019-03-10</td>                                    <td ID="vital5">Respiratory Rate</td>                                    <td>18</td>                                    <td>/min</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>2019-03-10</td>                                    <td ID="vital6">Body Temperature</td>                                    <td>36.72222222222222</td>                                    <td>Cel</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>2019-03-10</td>                                    <td ID="vital7">O2 % BldC Oximetry</td>                                    <td>96</td>                                    <td>%</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>2019-03-11</td>                                    <td ID="vital8">Height</td>                                    <td>165.1</td>                                    <td>cm</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>2019-03-11</td>                                    <td ID="vital9">Weight</td>                                    <td>54.431642928422384</td>                                    <td>kg</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>2019-03-11</td>                                    <td ID="vital10">Body Mass Index (BMI)</td>                                    <td>19.97</td>                                    <td>kg/m2</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>2019-04-01</td>                                    <td ID="vital11">BP Diastolic</td>                                    <td>100</td>                                    <td>mm[Hg]</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>2019-04-01</td>                                    <td ID="vital12">BP Systolic</td>                                    <td>140</td>                                    <td>mm[Hg]</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>2019-04-18</td>                                    <td ID="vital13">BP Diastolic</td>                                    <td>80</td>                                    <td>mm[Hg]</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>2019-04-18</td>                                    <td ID="vital14">BP Systolic</td>                                    <td>120</td>                                    <td>mm[Hg]</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>2019-04-09</td>                                    <td ID="vital15">BP Diastolic</td>                                    <td>80</td>                                    <td>mm[Hg]</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>2019-04-09</td>                                    <td ID="vital16">BP Systolic</td>                                    <td>110</td>                                    <td>mm[Hg]</td>                                </tr>                            </tbody>                        </table>                    </text>                    <entry typeCode="DRIV">                        <organizer classCode="CLUSTER" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.26"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.26"/>                            <id nullFlavor="UNK"/>                            <code code="46680005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Vital signs">                                <translation code="74728-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Vital signs"/>                            </code>                            <statusCode code="completed"/>                            <effectiveTime value="20190310012820+0000"/>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.27"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                                    <id nullFlavor="UNK"/>                                    <code code="8302-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Height">                                        <originalText>                                            <reference value="#vital1"/>                                        </originalText>                                    </code>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190310012820+0000"/>                                    <value unit="cm" value="182.88" xsi:type="PQ"/>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.27"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                                    <id nullFlavor="UNK"/>                                    <code code="29463-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Weight">                                        <originalText>                                            <reference value="#vital2"/>                                        </originalText>                                    </code>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190310012820+0000"/>                                    <value unit="kg" value="78.01868819740542" xsi:type="PQ"/>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.27"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                                    <id nullFlavor="UNK"/>                                    <code code="39156-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Body Mass Index (BMI)">                                        <originalText>                                            <reference value="#vital3"/>                                        </originalText>                                    </code>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190310012820+0000"/>                                    <value unit="kg/m2" value="23.33" xsi:type="PQ"/>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.27"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                                    <id nullFlavor="UNK"/>                                    <code code="8867-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Heart Rate">                                        <originalText>                                            <reference value="#vital4"/>                                        </originalText>                                    </code>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190310012820+0000"/>                                    <value unit="/min" value="88" xsi:type="PQ"/>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.27"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                                    <id nullFlavor="UNK"/>                                    <code code="9279-1" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Respiratory Rate">                                        <originalText>                                            <reference value="#vital5"/>                                        </originalText>                                    </code>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190310012820+0000"/>                                    <value unit="/min" value="18" xsi:type="PQ"/>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.27"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                                    <id nullFlavor="UNK"/>                                    <code code="8310-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Body Temperature">                                        <originalText>                                            <reference value="#vital6"/>                                        </originalText>                                    </code>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190310012820+0000"/>                                    <value unit="Cel" value="36.72222222222222" xsi:type="PQ"/>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.27"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                                    <id nullFlavor="UNK"/>                                    <code code="59408-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="O2 % BldC Oximetry">                                        <originalText>                                            <reference value="#vital7"/>                                        </originalText>                                    </code>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190310012820+0000"/>                                    <value unit="%" value="96" xsi:type="PQ"/>                                </observation>                            </component>                        </organizer>                    </entry>                    <entry typeCode="DRIV">                        <organizer classCode="CLUSTER" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.26"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.26"/>                            <id nullFlavor="UNK"/>                            <code code="46680005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Vital signs">                                <translation code="74728-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Vital signs"/>                            </code>                            <statusCode code="completed"/>                            <effectiveTime value="20190311040000+0000"/>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.27"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                                    <id nullFlavor="UNK"/>                                    <code code="8302-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Height">                                        <originalText>                                            <reference value="#vital8"/>                                        </originalText>                                    </code>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190311040000+0000"/>                                    <value unit="cm" value="165.1" xsi:type="PQ"/>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.27"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                                    <id nullFlavor="UNK"/>                                    <code code="29463-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Weight">                                        <originalText>                                            <reference value="#vital9"/>                                        </originalText>                                    </code>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190311040000+0000"/>                                    <value unit="kg" value="54.431642928422384" xsi:type="PQ"/>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.27"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                                    <id nullFlavor="UNK"/>                                    <code code="39156-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Body Mass Index (BMI)">                                        <originalText>                                            <reference value="#vital10"/>                                        </originalText>                                    </code>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190311040000+0000"/>                                    <value unit="kg/m2" value="19.97" xsi:type="PQ"/>                                </observation>                            </component>                        </organizer>                    </entry>                    <entry typeCode="DRIV">                        <organizer classCode="CLUSTER" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.26"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.26"/>                            <id nullFlavor="UNK"/>                            <code code="46680005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Vital signs">                                <translation code="74728-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Vital signs"/>                            </code>                            <statusCode code="completed"/>                            <effectiveTime value="20190401233404+0000"/>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.27"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                                    <id nullFlavor="UNK"/>                                    <code code="8462-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="BP Diastolic">                                        <originalText>                                            <reference value="#vital11"/>                                        </originalText>                                    </code>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190401233404+0000"/>                                    <value unit="mm[Hg]" value="100" xsi:type="PQ"/>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.27"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                                    <id nullFlavor="UNK"/>                                    <code code="8480-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="BP Systolic">                                        <originalText>                                            <reference value="#vital12"/>                                        </originalText>                                    </code>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190401233404+0000"/>                                    <value unit="mm[Hg]" value="140" xsi:type="PQ"/>                                </observation>                            </component>                        </organizer>                    </entry>                    <entry typeCode="DRIV">                        <organizer classCode="CLUSTER" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.26"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.26"/>                            <id nullFlavor="UNK"/>                            <code code="46680005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Vital signs">                                <translation code="74728-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Vital signs"/>                            </code>                            <statusCode code="completed"/>                            <effectiveTime value="20190418040000+0000"/>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.27"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                                    <id nullFlavor="UNK"/>                                    <code code="8462-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="BP Diastolic">                                        <originalText>                                            <reference value="#vital13"/>                                        </originalText>                                    </code>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190418040000+0000"/>                                    <value unit="mm[Hg]" value="80" xsi:type="PQ"/>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.27"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                                    <id nullFlavor="UNK"/>                                    <code code="8480-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="BP Systolic">                                        <originalText>                                            <reference value="#vital14"/>                                        </originalText>                                    </code>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190418040000+0000"/>                                    <value unit="mm[Hg]" value="120" xsi:type="PQ"/>                                </observation>                            </component>                        </organizer>                    </entry>                    <entry typeCode="DRIV">                        <organizer classCode="CLUSTER" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.26"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.26"/>                            <id nullFlavor="UNK"/>                            <code code="46680005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Vital signs">                                <translation code="74728-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Vital signs"/>                            </code>                            <statusCode code="completed"/>                            <effectiveTime value="20190409040000+0000"/>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.27"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                                    <id nullFlavor="UNK"/>                                    <code code="8462-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="BP Diastolic">                                        <originalText>                                            <reference value="#vital15"/>                                        </originalText>                                    </code>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190409040000+0000"/>                                    <value unit="mm[Hg]" value="80" xsi:type="PQ"/>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.27"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                                    <id nullFlavor="UNK"/>                                    <code code="8480-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="BP Systolic">                                        <originalText>                                            <reference value="#vital16"/>                                        </originalText>                                    </code>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190409040000+0000"/>                                    <value unit="mm[Hg]" value="110" xsi:type="PQ"/>                                </observation>                            </component>                        </organizer>                    </entry>                </section>            </component>            <component>                <section>                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.2.17"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.17"/>                    <code code="29762-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Social History"/>                    <title>Social History</title>                    <text>                        <table>                            <thead>                                <tr>                                    <th colspan="4">Social History</th>                                </tr>                                <tr>                                    <th>Social History Observation</th>                                    <th>Description</th>                                    <th>Effective Time</th>                                </tr>                            </thead>                            <tbody>                                <tr>                                    <td>Smoking Status</td>                                    <td>Current every day smoker</td>                                    <td>No Data Available</td>                                </tr>                            </tbody>                        </table>                        <table>                            <thead>                                <tr>                                    <th colspan="4">Birth Sex</th>                                </tr>                            </thead>                            <tbody>                                <tr>                                    <td>Male</td>                                </tr>                            </tbody>                        </table>                    </text>                    <entry typeCode="DRIV">                        <observation classCode="OBS" moodCode="EVN">                            <templateId root="2.16.840.1.113883.10.20.22.4.78"/>                            <id nullFlavor="UNK"/>                            <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Assertion"/>                            <statusCode code="completed"/>                            <effectiveTime nullFlavor="UNK"/>                            <value code="449868002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" xsi:type="CD"/>                        </observation>                    </entry>                    <entry>                        <observation classCode="OBS" moodCode="EVN">                            <templateId extension="2016-06-01" root="2.16.840.1.113883.10.20.22.4.200"/>                            <code code="76689-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Sex Assigned At Birth"/>                            <statusCode code="completed"/>                            <effectiveTime value="19990116"/>                            <value code="M" codeSystem="2.16.840.1.113883.5.1" codeSystemName="HL7 AdministrativeGender" displayName="Male" xsi:type="CD"/>                        </observation>                    </entry>                </section>            </component>            <component>                <section>                    <templateId root="2.16.840.1.113883.10.20.22.2.7"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.7.1"/>                    <code code="47519-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="History of Procedures"/>                    <title>History of Procedures</title>                    <text>                        <table>                            <thead>                                <tr>                                    <th colspan="5">Procedures</th>                                </tr>                                <tr>                                    <th>Service</th>                                    <th>Procedure code</th>                                    <th>Service date</th>                                    <th>Servicing provider</th>                                    <th>Phone#</th>                                </tr>                            </thead>                            <tbody>                                <tr>                                    <td ID="procedure1">Office visit; established patient; moderate complexity</td>                                    <td>99214</td>                                    <td>2019-03-10</td>                                    <td>No Data Available</td>                                    <td>No Data Available</td>                                </tr>                            </tbody>                        </table>                    </text>                    <entry typeCode="DRIV">                        <procedure classCode="PROC" moodCode="EVN">                            <templateId root="2.16.840.1.113883.10.20.22.4.14"/>                            <id nullFlavor="UNK"/>                            <code code="99214" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT" displayName="Office visit; established patient; moderate complexity">                                <originalText>                                    <reference value="#procedure1"/>                                </originalText>                            </code>                            <statusCode code="completed"/>                            <effectiveTime value="20190310012820+0000"/>                        </procedure>                    </entry>                </section>            </component>            <component>                <section nullFlavor="NI">                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.2.23"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.23"/>                    <code code="46264-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Medical Equipment"/>                    <title>Implantable Devices</title>                    <text>No Information</text>                </section>            </component>            <component>                <section>                    <templateId root="2.16.840.1.113883.10.20.22.2.3.1"/>                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.2.3.1"/>                    <code code="30954-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Relevant diagnostic tests and/or laboratory data"/>                    <title>Relevant diagnostic tests and/or laboratory data</title>                    <text>                        <table>                            <thead>                                <tr>                                    <th colspan="8">Laboratory Results</th>                                </tr>                                <tr>                                    <th>Test</th>                                    <th>Result</th>                                    <th>Units</th>                                    <th>Ref low</th>                                    <th>Ref high</th>                                    <th>Date</th>                                    <th>Location</th>                                    <th>Source</th>                                </tr>                            </thead>                            <tbody>                                <tr>                                    <td colspan="8">Glucose</td>                                </tr>                                <tr>                                    <td>Glucose</td>                                    <td ID="result1">245</td>                                    <td>mg/dL</td>                                    <td>65</td>                                    <td>99</td>                                    <td>2019-03-10</td>                                    <td>No Data Available</td>                                    <td>No Data Available</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td colspan="8">COMPREHENSIVE METABOLIC PANEL</td>                                </tr>                                <tr>                                    <td>GLUCOSE</td>                                    <td ID="result2">102</td>                                    <td>mg/dL</td>                                    <td>65</td>                                    <td>139</td>                                    <td>2019-03-14</td>                                    <td>Quest Diagnostics LLC-Quest Diagnostics LLC 200 Forest St, 3Rd Fl, Suite B,                                        Marlborough, MA 01752-3023 | Phone:                                    </td>                                    <td>No Data Available</td>                                </tr>                                <tr>                                    <td>UREA NITROGEN (BUN)</td>                                    <td ID="result3">14</td>                                    <td>mg/dL</td>                                    <td>7</td>                                    <td>20</td>                                    <td>2019-03-14</td>                                    <td>Quest Diagnostics LLC-Quest Diagnostics LLC 200 Forest St, 3Rd Fl, Suite B,                                        Marlborough, MA 01752-3023 | Phone:                                    </td>                                    <td>No Data Available</td>                                </tr>                                <tr>                                    <td>CREATININE</td>                                    <td ID="result4">1.01</td>                                    <td>mg/dL</td>                                    <td>0.20</td>                                    <td>0.73</td>                                    <td>2019-03-14</td>                                    <td>Quest Diagnostics LLC-Quest Diagnostics LLC 200 Forest St, 3Rd Fl, Suite B,                                        Marlborough, MA 01752-3023 | Phone:                                    </td>                                    <td>No Data Available</td>                                </tr>                                <tr>                                    <td>BUN/CREATININE RATIO</td>                                    <td ID="result5">14</td>                                    <td>(calc)</td>                                    <td>6</td>                                    <td>22</td>                                    <td>2019-03-14</td>                                    <td>Quest Diagnostics LLC-Quest Diagnostics LLC 200 Forest St, 3Rd Fl, Suite B,                                        Marlborough, MA 01752-3023 | Phone:                                    </td>                                    <td>No Data Available</td>                                </tr>                                <tr>                                    <td>SODIUM</td>                                    <td ID="result6">139</td>                                    <td>mmol/L</td>                                    <td>135</td>                                    <td>146</td>                                    <td>2019-03-14</td>                                    <td>Quest Diagnostics LLC-Quest Diagnostics LLC 200 Forest St, 3Rd Fl, Suite B,                                        Marlborough, MA 01752-3023 | Phone:                                    </td>                                    <td>No Data Available</td>                                </tr>                                <tr>                                    <td>POTASSIUM</td>                                    <td ID="result7">4.0</td>                                    <td>mmol/L</td>                                    <td>3.8</td>                                    <td>5.1</td>                                    <td>2019-03-14</td>                                    <td>Quest Diagnostics LLC-Quest Diagnostics LLC 200 Forest St, 3Rd Fl, Suite B,                                        Marlborough, MA 01752-3023 | Phone:                                    </td>                                    <td>No Data Available</td>                                </tr>                                <tr>                                    <td>CHLORIDE</td>                                    <td ID="result8">104</td>                                    <td>mmol/L</td>                                    <td>98</td>                                    <td>110</td>                                    <td>2019-03-14</td>                                    <td>Quest Diagnostics LLC-Quest Diagnostics LLC 200 Forest St, 3Rd Fl, Suite B,                                        Marlborough, MA 01752-3023 | Phone:                                    </td>                                    <td>No Data Available</td>                                </tr>                                <tr>                                    <td>CARBON DIOXIDE</td>                                    <td ID="result9">28</td>                                    <td>mmol/L</td>                                    <td>20</td>                                    <td>32</td>                                    <td>2019-03-14</td>                                    <td>Quest Diagnostics LLC-Quest Diagnostics LLC 200 Forest St, 3Rd Fl, Suite B,                                        Marlborough, MA 01752-3023 | Phone:                                    </td>                                    <td>No Data Available</td>                                </tr>                                <tr>                                    <td>CALCIUM</td>                                    <td ID="result10">9.3</td>                                    <td>mg/dL</td>                                    <td>8.9</td>                                    <td>10.4</td>                                    <td>2019-03-14</td>                                    <td>Quest Diagnostics LLC-Quest Diagnostics LLC 200 Forest St, 3Rd Fl, Suite B,                                        Marlborough, MA 01752-3023 | Phone:                                    </td>                                    <td>No Data Available</td>                                </tr>                                <tr>                                    <td>PROTEIN, TOTAL</td>                                    <td ID="result11">6.5</td>                                    <td>g/dL</td>                                    <td>6.3</td>                                    <td>8.2</td>                                    <td>2019-03-14</td>                                    <td>Quest Diagnostics LLC-Quest Diagnostics LLC 200 Forest St, 3Rd Fl, Suite B,                                        Marlborough, MA 01752-3023 | Phone:                                    </td>                                    <td>No Data Available</td>                                </tr>                                <tr>                                    <td>ALBUMIN</td>                                    <td ID="result12">3.9</td>                                    <td>g/dL</td>                                    <td>3.6</td>                                    <td>5.1</td>                                    <td>2019-03-14</td>                                    <td>Quest Diagnostics LLC-Quest Diagnostics LLC 200 Forest St, 3Rd Fl, Suite B,                                        Marlborough, MA 01752-3023 | Phone:                                    </td>                                    <td>No Data Available</td>                                </tr>                                <tr>                                    <td>GLOBULIN</td>                                    <td ID="result13">2.6</td>                                    <td>g/dL_(calc)</td>                                    <td>2.1</td>                                    <td>3.5</td>                                    <td>2019-03-14</td>                                    <td>Quest Diagnostics LLC-Quest Diagnostics LLC 200 Forest St, 3Rd Fl, Suite B,                                        Marlborough, MA 01752-3023 | Phone:                                    </td>                                    <td>No Data Available</td>                                </tr>                                <tr>                                    <td>ALBUMIN/GLOBULIN RATIO</td>                                    <td ID="result14">1.5</td>                                    <td>(calc)</td>                                    <td>1.0</td>                                    <td>2.5</td>                                    <td>2019-03-14</td>                                    <td>Quest Diagnostics LLC-Quest Diagnostics LLC 200 Forest St, 3Rd Fl, Suite B,                                        Marlborough, MA 01752-3023 | Phone:                                    </td>                                    <td>No Data Available</td>                                </tr>                                <tr>                                    <td>BILIRUBIN, TOTAL</td>                                    <td ID="result15">0.6</td>                                    <td>mg/dL</td>                                    <td>0.2</td>                                    <td>0.8</td>                                    <td>2019-03-14</td>                                    <td>Quest Diagnostics LLC-Quest Diagnostics LLC 200 Forest St, 3Rd Fl, Suite B,                                        Marlborough, MA 01752-3023 | Phone:                                    </td>                                    <td>No Data Available</td>                                </tr>                                <tr>                                    <td>ALKALINE PHOSPHATASE</td>                                    <td ID="result16">87</td>                                    <td>U/L</td>                                    <td>47</td>                                    <td>324</td>                                    <td>2019-03-14</td>                                    <td>Quest Diagnostics LLC-Quest Diagnostics LLC 200 Forest St, 3Rd Fl, Suite B,                                        Marlborough, MA 01752-3023 | Phone:                                    </td>                                    <td>No Data Available</td>                                </tr>                                <tr>                                    <td>AST</td>                                    <td ID="result17">13</td>                                    <td>U/L</td>                                    <td>12</td>                                    <td>32</td>                                    <td>2019-03-14</td>                                    <td>Quest Diagnostics LLC-Quest Diagnostics LLC 200 Forest St, 3Rd Fl, Suite B,                                        Marlborough, MA 01752-3023 | Phone:                                    </td>                                    <td>No Data Available</td>                                </tr>                                <tr>                                    <td>ALT</td>                                    <td ID="result18">12</td>                                    <td>U/L</td>                                    <td>8</td>                                    <td>30</td>                                    <td>2019-03-14</td>                                    <td>Quest Diagnostics LLC-Quest Diagnostics LLC 200 Forest St, 3Rd Fl, Suite B,                                        Marlborough, MA 01752-3023 | Phone:                                    </td>                                    <td>No Data Available</td>                                </tr>                            </tbody>                        </table>                    </text>                    <entry typeCode="DRIV">                        <organizer classCode="BATTERY" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.1"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.1"/>                            <id nullFlavor="UNK"/>                            <code code="elation-glucose" displayName="Glucose"/>                            <statusCode code="completed"/>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="2345-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Glucose"/>                                    <text>                                        <reference value="#result1"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190310023600+0000"/>                                    <value unit="mg/dL" value="245" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="mg/dL" value="65"/>                                                <high unit="mg/dL" value="99"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                        </organizer>                    </entry>                    <entry typeCode="DRIV">                        <organizer classCode="BATTERY" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.1"/>                            <templateId root="2.16.840.1.113883.10.20.22.4.1"/>                            <id nullFlavor="UNK"/>                            <code code="10231" displayName="COMPREHENSIVE METABOLIC PANEL"/>                            <statusCode code="completed"/>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="2345-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="GLUCOSE"/>                                    <text>                                        <reference value="#result2"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190314160000+0000"/>                                    <value unit="mg/dL" value="102" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="mg/dL" value="65"/>                                                <high unit="mg/dL" value="139"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="3094-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="UREA NITROGEN (BUN)"/>                                    <text>                                        <reference value="#result3"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190314160000+0000"/>                                    <value unit="mg/dL" value="14" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="mg/dL" value="7"/>                                                <high unit="mg/dL" value="20"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="2160-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="CREATININE"/>                                    <text>                                        <reference value="#result4"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190314160000+0000"/>                                    <value unit="mg/dL" value="1.01" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="mg/dL" value="0.20"/>                                                <high unit="mg/dL" value="0.73"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="3097-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="BUN/CREATININE RATIO"/>                                    <text>                                        <reference value="#result5"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190314160000+0000"/>                                    <value unit="(calc)" value="14" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="(calc)" value="6"/>                                                <high unit="(calc)" value="22"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="2951-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="SODIUM"/>                                    <text>                                        <reference value="#result6"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190314160000+0000"/>                                    <value unit="mmol/L" value="139" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="mmol/L" value="135"/>                                                <high unit="mmol/L" value="146"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="2823-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="POTASSIUM"/>                                    <text>                                        <reference value="#result7"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190314160000+0000"/>                                    <value unit="mmol/L" value="4.0" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="mmol/L" value="3.8"/>                                                <high unit="mmol/L" value="5.1"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="2075-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="CHLORIDE"/>                                    <text>                                        <reference value="#result8"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190314160000+0000"/>                                    <value unit="mmol/L" value="104" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="mmol/L" value="98"/>                                                <high unit="mmol/L" value="110"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="2028-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="CARBON DIOXIDE"/>                                    <text>                                        <reference value="#result9"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190314160000+0000"/>                                    <value unit="mmol/L" value="28" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="mmol/L" value="20"/>                                                <high unit="mmol/L" value="32"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="17861-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="CALCIUM"/>                                    <text>                                        <reference value="#result10"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190314160000+0000"/>                                    <value unit="mg/dL" value="9.3" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="mg/dL" value="8.9"/>                                                <high unit="mg/dL" value="10.4"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="2885-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="PROTEIN, TOTAL"/>                                    <text>                                        <reference value="#result11"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190314160000+0000"/>                                    <value unit="g/dL" value="6.5" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="g/dL" value="6.3"/>                                                <high unit="g/dL" value="8.2"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="1751-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="ALBUMIN"/>                                    <text>                                        <reference value="#result12"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190314160000+0000"/>                                    <value unit="g/dL" value="3.9" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="g/dL" value="3.6"/>                                                <high unit="g/dL" value="5.1"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="10834-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="GLOBULIN"/>                                    <text>                                        <reference value="#result13"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190314160000+0000"/>                                    <value unit="g/dL_(calc)" value="2.6" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="g/dL_(calc)" value="2.1"/>                                                <high unit="g/dL_(calc)" value="3.5"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="1759-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="ALBUMIN/GLOBULIN RATIO"/>                                    <text>                                        <reference value="#result14"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190314160000+0000"/>                                    <value unit="(calc)" value="1.5" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="(calc)" value="1.0"/>                                                <high unit="(calc)" value="2.5"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="1975-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="BILIRUBIN, TOTAL"/>                                    <text>                                        <reference value="#result15"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190314160000+0000"/>                                    <value unit="mg/dL" value="0.6" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="mg/dL" value="0.2"/>                                                <high unit="mg/dL" value="0.8"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="6768-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="ALKALINE PHOSPHATASE"/>                                    <text>                                        <reference value="#result16"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190314160000+0000"/>                                    <value unit="U/L" value="87" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="U/L" value="47"/>                                                <high unit="U/L" value="324"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="1920-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="AST"/>                                    <text>                                        <reference value="#result17"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190314160000+0000"/>                                    <value unit="U/L" value="13" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="U/L" value="12"/>                                                <high unit="U/L" value="32"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                            <component>                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.2"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.2"/>                                    <id nullFlavor="UNK"/>                                    <code code="1742-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="ALT"/>                                    <text>                                        <reference value="#result18"/>                                    </text>                                    <statusCode code="completed"/>                                    <effectiveTime value="20190314160000+0000"/>                                    <value unit="U/L" value="12" xsi:type="PQ"/>                                    <referenceRange>                                        <observationRange>                                            <value xsi:type="IVL_PQ">                                                <low unit="U/L" value="8"/>                                                <high unit="U/L" value="30"/>                                            </value>                                        </observationRange>                                    </referenceRange>                                </observation>                            </component>                        </organizer>                    </entry>                </section>            </component>            <component>                <section>                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.2.14"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.14"/>                    <code code="47420-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Functional Status"/>                    <title>Functional Status</title>                    <text>No Information</text>                </section>            </component>            <component>                <section>                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.2.56"/>                    <code code="10190-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Mental Status"/>                    <title>Mental Status</title>                    <text>No Information</text>                </section>            </component>            <component>                <section>                    <templateId root="2.16.840.1.113883.10.20.22.2.8"/>                    <code code="51848-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Assessments"/>                    <title>Assessments</title>                    <text>                        <table>                            <thead>                                <tr>                                    <th>Date</th>                                    <th>Assessment</th>                                </tr>                            </thead>                            <tbody>                                <tr>                                    <td>2019-03-10</td>                                    <td>Type 2 diabetes, uncontrolled, with neuropathy</td>                                </tr>                            </tbody>                            <tbody>                                <tr>                                    <td>2019-03-10</td>                                    <td>HTN (hypertension)</td>                                </tr>                            </tbody>                        </table>                    </text>                </section>            </component>            <component>                <section>                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.2.10"/>                    <templateId root="2.16.840.1.113883.10.20.22.2.10"/>                    <code code="18776-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Plan of Care"/>                    <title>Plan of Care</title>                    <text>                        <table>                            <thead>                                <tr>                                    <th>Date</th>                                    <th>Plan</th>                                </tr>                            </thead>                            <tbody>                                <tr>                                    <td>2019-03-10</td>                                    <td>Walk 15 minutes TIW with caretaker</td>                                </tr>                            </tbody>                        </table>                    </text>                    <entry typeCode="DRIV">                        <observation classCode="OBS" moodCode="RQO">                            <templateId root="2.16.840.1.113883.10.20.22.4.44"/>                            <id nullFlavor="UNK"/>                            <code code="278448002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Walk 15 minutes TIW with caretaker"/>                            <statusCode code="new"/>                            <effectiveTime>                                <low value="20190310012820+0000"/>                            </effectiveTime>                        </observation>                    </entry>                </section>            </component>            <component>                <section nullFlavor="NI">                    <templateId root="2.16.840.1.113883.10.20.22.2.60"/>                    <code code="61146-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Goals"/>                    <title>Goals</title>                    <text>Not Available</text>                </section>            </component>            <component>                <section>                    <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.2.58"/>                    <code code="75310-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Health Concerns Document"/>                    <title>Health Concerns</title>                    <text>                        <table>                            <thead>                                <tr>                                    <th>Date</th>                                    <th>Concern</th>                                </tr>                            </thead>                            <tbody>                                <tr>                                    <td>2019-03-10</td>                                    <td>                                        <list listType="unordered">                                            <item>Type 2 Diabetes with neuropathy and retinopathy w/o macular edema                                            </item>                                        </list>                                    </td>                                </tr>                            </tbody>                        </table>                    </text>                    <entry>                        <act classCode="ACT" moodCode="EVN">                            <templateId extension="2015-08-01" root="2.16.840.1.113883.10.20.22.4.132"/>                            <id nullFlavor="UNK"/>                            <code code="75310-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Health Concern"/>                            <statusCode code="completed"/>                            <effectiveTime>                                <low value="20190310012820+0000"/>                            </effectiveTime>                            <entryRelationship typeCode="REFR">                                <observation classCode="OBS" moodCode="EVN">                                    <templateId extension="2014-06-09" root="2.16.840.1.113883.10.20.22.4.4"/>                                    <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                                    <id nullFlavor="UNK"/>                                    <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem">                                        <translation code="75326-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Problem"/>                                    </code>                                    <text>Type 2 Diabetes with neuropathy and retinopathy w/o macular edema</text>                                    <statusCode code="completed"/>                                    <effectiveTime>                                        <low value="20190310012820+0000"/>                                    </effectiveTime>                                    <value displayName="Type 2 Diabetes with neuropathy and retinopathy w/o macular edema" xsi:type="CD"/>                                </observation>                            </entryRelationship>                        </act>                    </entry>                </section>            </component>        </structuredBody>    </component></ClinicalDocument>"
}